/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.5).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.costco.kraken.api;

import java.math.BigDecimal;
import com.costco.kraken.model.ConferenceRoom;
import com.costco.kraken.model.ConferenceRoomResp;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import javax.validation.Valid;
import javax.validation.constraints.*;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-06-11T21:16:22.630Z")

@Api(value = "ConferenceRooms", description = "the ConferenceRooms API")
public interface ConferenceRoomsApi {

    @ApiOperation(value = "", nickname = "createConferenceRoom", notes = "", response = ConferenceRoom.class, tags={ "location", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Object Created", response = ConferenceRoom.class) })
    @RequestMapping(value = "/ConferenceRooms",
        method = RequestMethod.POST)
    ResponseEntity<ConferenceRoom> createConferenceRoom(@ApiParam(value = "" ,required=true) @RequestHeader(value="correlationId", required=true) String correlationId,@ApiParam(value = "",required=true) @PathVariable("id") String id,@ApiParam(value = "" ,required=true )  @Valid @RequestBody ConferenceRoom body);


    @ApiOperation(value = "", nickname = "getSingleConferenceRoom", notes = "", response = ConferenceRoom.class, tags={ "location", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Sucessfull Operation", response = ConferenceRoom.class) })
    @RequestMapping(value = "/ConferenceRooms/{id}",
        method = RequestMethod.GET)
    ResponseEntity<ConferenceRoom> getSingleConferenceRoom(@ApiParam(value = "" ,required=true) @RequestHeader(value="correlationId", required=true) String correlationId,@ApiParam(value = "",required=true) @PathVariable("id") String id);


    @ApiOperation(value = "", nickname = "searchConferenceRoom", notes = "", response = ConferenceRoomResp.class, tags={ "location", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Sucessfull Operation", response = ConferenceRoomResp.class) })
    @RequestMapping(value = "/ConferenceRooms",
        method = RequestMethod.GET)
    ResponseEntity<ConferenceRoomResp> searchConferenceRoom(@ApiParam(value = "" ,required=true) @RequestHeader(value="correlationId", required=true) String correlationId,@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "ammenities", required = true) String ammenities,@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "numPerson", required = true) BigDecimal numPerson,@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "roomName", required = true) String roomName);

}
